<?php

define('CX', true);
define('cx', true);

// Root Path
$_dir = dirname(__FILE__);
define('ROOT_PATH', dirname(__FILE__));

$config = [];
$router = [];
$hooks  = [];

// Dırectory Seperator
define('DS', DIRECTORY_SEPARATOR);

define('APP_PATH', ROOT_PATH . DS . 'app');

define('SYSTEM_PATH', ROOT_PATH . DS . 'system');

define('VALIDATIONS_PATH', APP_PATH . DS . '_config' . DS . '_validations');

define('CACHE_PATH', ROOT_PATH . DS . 'sysdata' .  DS . 'cache');

define('PAGES_PATH', ROOT_PATH . DS . 'pages');

define('LOGS_PATH', ROOT_PATH . DS . 'sysdata' . DS . 'logs');

define('BACKUPS_PATH', ROOT_PATH . DS . 'sysdata' . DS . 'backups');

define('LIBRARIES_PATH', APP_PATH . DS . 'libraries');

// System
define('SYSTEM_LIB_PATH', SYSTEM_PATH . DS . 'lib');
define('SYSTEM_INCLUDES_PATH', SYSTEM_PATH . DS . 'includes');
define('SYSDATA_PATH', ROOT_PATH . DS . 'sysdata');

// Contents
define('CONTENTS_PATH', ROOT_PATH . DS . 'contents');
define('MAPS_PATH', CONTENTS_PATH . DS . '_maps');

// ASSETS
define('ASSETS_PATH', ROOT_PATH . DS . 'assets');
define('ASSETS_SYS_PATH', ASSETS_PATH . DS . 'sys');


// App Paths
//define('CONTROLLERS_PATH', APP_PATH . '/controllers');
//define('VIEWS_PATH',       APP_PATH . '/views');
//define('MODELS_PATH',      APP_PATH . '/models');
//define('PLUGINS_PATH',     APP_PATH . '/plugins');
//define('LAYOUTS_PATH',     APP_PATH . '/views/_layouts');


// Languages
define('LANGUAGES_PATH', APP_PATH . '/languages');


// Admin
define('_ADMIN', '/admin');
define('_ADMIN_DB_LIST', _ADMIN . '/db_list');


// Time
define( '_SECOND' ,  1  );
define( '_MINUTE' , _SECOND * 60 );
define( '_HOUR'   , _MINUTE * 60 );
define( '_DAY'    , _HOUR   * 24 );
define( '_WEEK'   , _DAY    * 7  );
define( '_MONTH'  , _WEEK   * 30 );
define( '_YEAR'   , _MONTH  * 12 );


date_default_timezone_set('Europe/Istanbul');


try
{

    if (isset($_SERVER["HTTP_CF_CONNECTING_IP"])) $_SERVER['REMOTE_ADDR'] = $_SERVER["HTTP_CF_CONNECTING_IP"];


    require_once SYSTEM_LIB_PATH . DS . 'cx.class.php';
    require_once SYSTEM_LIB_PATH . DS . 'sys.class.php';
    require_once SYSTEM_LIB_PATH . DS . 'session.class.php';


    // Detect Config Path
    $config_folder = $_SERVER['HTTP_HOST'];
    if(strpos($config_folder, ':') !== false) $config_folder = explode(':', $config_folder)[0];

    $config_dir = APP_PATH . '/_config/' . $config_folder;

    if(is_dir($config_dir))
    {
        define('CONFIG_PATH', $config_dir);
    }
    else
    {
        define('CONFIG_PATH', APP_PATH . '/_config/_default');
    }
    unset($config_dir);



    // Autoload Functions
    require SYSTEM_LIB_PATH . DS . 'functions.autoload.php';


    // Includes
    require SYSTEM_LIB_PATH . DS . 'functions.system.php';


    // Set All Files
    cx::$files = sys::get_software_files();


    // Display Errors
    if(sys::get_config('errors')['active'] === true)
    {
        ini_set('display_errors', 'on');
        error_reporting(E_ALL);
    }
    else
    {
        ini_set('display_errors', 'off');
        error_reporting(0);
    }


    // PHP Log File
    ini_set('log_errors', 1);
    ini_set('error_log', LOGS_PATH . '/php/error.log');


    // Session Start
    session::start();


    // Router Start
    router::start();


    // Language
    lang::start();
    define('CURRENT_LANGUAGE', lang::current());

    // URL - Links
    define('URL'           , sys::get_config('application')['url']);
    define('ADMIN_URL'     , URL . _ADMIN);
    define('SYS_URL'       , URL . '/sys');
    define('DEVELOPER_URL' , URL . '/developer');
    define('CONTENTS'      , sys::get_config('application')['url'] . '/contents');
    define('ASSETS'        , sys::get_config('application')['url'] . '/assets');
    define('ASSETS_SYS'    , sys::get_config('application')['url'] . '/assets/sys');
    define('SYS_ASSETS'    , sys::get_config('application')['url'] . '/system/app/assets');


    require_once CONFIG_PATH . DS . 'settings.config.php';


    // Database Connection
    $db_config = sys::get_config('database');

    if($db_config['active'] === true)
    {
        db::$user    = $db_config['user'];
        db::$pass    = $db_config['pass'];
        db::$name    = $db_config['name'];
        db::$host    = $db_config['host'];
        db::$port    = $db_config['port'];
        db::$charset = $db_config['charset'];
        db::$prefix  = $db_config['prefix'];

        // Remove db_config variable
        unset($db_config);

        db::connect();
    }


    // Item Columns
    cx::data('item_columns', item::columns());


    // Browser Caching
    header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
    header('Cache-Control: no-store, no-cache, must-revalidate');
    header('Cache-Control: post-check=0, pre-check=0', false);
    header('Pragma: no-cache');


    // Include Settings
    foreach(cx::$files['settings'] as $sFile) include ROOT_PATH . "/$sFile";


    // User
    $user_cookie = cookie::get('user');

    if( $user_cookie != null )
    {
        $uCookie = explode('-', $user_cookie);
        if(user::create_cookie_key( $uCookie[0] ) != $user_cookie)
        {
            user::logout();
            user::id(null);
            user::username(null);
            user::authority(null);
        }
        else
        {
            if( ! user::id() || ! user::username() || ! user::authority() || ! user::permissions() )
            {
                $user = user::get( $uCookie[0] );

                user::info(        $user                );
                user::id(          $user['id']          );
                user::username(    $user['username']    );
                user::authority(   $user['authority']   );
                user::permissions( $user['permissions'] );
            }
        }
    }
    unset($user_cookie, $user);
}
catch(Exception $e)
{
    logger::add('[ERROR] ' . $e->getMessage(), 'error');
    die($e->getMessage());
}
//finally
//{
//    db::close();
//    hook::listen('page', 'after');
//}

?>