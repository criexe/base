<?php

$params = [];

set_time_limit(0);
ini_set('memory_limit', '-1');

// Default Domain
$_SERVER['HTTP_HOST']   = 'localhost';
$_SERVER['REMOTE_ADDR'] = '127.0.0.1';


// Show Errors
ini_set('display_errors', 'on');
error_reporting(E_ALL);


// Settings
require_once 'settings.cx';
if(!defined('cx')) die('Load Settings...'); 


// Parse Params
foreach($argv as $a)
{
    if($a[0] == '-' && $a[1] == '-')
    {
        $a = trim($a);
        $a = trim($a, '-');
        $a = trim($a);
        
        if(strpos($a, '=') !== false)
        {
            $a = explode('=', $a);
            $params[] = [
                
                'alias' => $a[0],
                'value' => $a[1]
            ];
        }
        else
        {
            $params[] = [
                
                'alias' => $a,
                'value' => true
            ];
        }
    }
}


// Get All Timer Files
$timer_files = timer::files();
foreach($timer_files as $file) require_once ROOT_PATH . DS . $file;



$tasks = timer::tasks();

echo "Timer Started !\n";


if(count($params) > 0)
{
    foreach($params as $param)
    {
        switch($param['alias'])
        {
            case 'all':
                
                echo "Executing all tasks...\n";
                
                foreach($tasks as $time => $funcs)
                {
                    foreach($funcs as $func) $func();
                }
                break;
        }
    }
}
else
{
    // Update Last Runtime Data
    timer::data('last_runtime', time());


    // Clear Temp
    timer::clear_temp();


    // Tasks
    foreach($tasks as $time => $funcs)
    {
        // Check Counter
        if($time <= timer::counter($time))
        {
            foreach($funcs as $func) $func();
            timer::counter($time, 0);
        }
        else
        {
            timer::counter($time, 1);
        }
    }
}